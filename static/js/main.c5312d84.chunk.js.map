{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","componentDidMount","console","log","this","id","title","type","defaultChecked","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","filter","post","data","uuidv4","get","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5312d84.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n            <Link style = {linkStyle} to=\"/\">Home</Link> | <Link style = {linkStyle} to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\nexport default Header;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\n    };\n  };\n\n  componentDidMount = (props) => {\n    console.log(this.props.todo);\n  };\n\n  render() {\n    const { id, title, completed } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            defaultChecked={completed}\n            onChange={this.props.markComplete.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\",\n};\n\nexport default TodoItem;","import React, {Component} from 'react'\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\n  render(){\n  return this.props.todos.map((todo) => (\n    <TodoItem key={todo.id} todo={todo} markComplete=\n    {this.props.markComplete} delTodo={this.props.delTodo}/>\n  ));\n}\n}\n\n// proptypes -- Dette er god praksis\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class AddTodo extends Component {\nstate = {\n    title: ''\n}\n\n\nonChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\nonSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: ''});\n}\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit} style={{ display: 'flex'}}>\n                <input \n                type=\"text\" \n                name=\"title\"\n                style={{ flex: '10', padding: '5px' }} \n                placeholder=\"Add Todo...\"\n                value={this.state.title}\n                onChange={this.onChange}/>\n\n\n                <input \n                type=\"submit\" \n                value = \"Submit\"\n                className = \"btn\"\n                style = {{flex: '1'}}/>\n            </form>\n        )\n    }\n}\n\n// proptypes -- Dette er god praksis\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <React.Fragment>\n            <h1>About</h1>\n            <p>This is the TodoList app v1.0.0. It is a part of a React crash course.</p>\n        </React.Fragment>\n    )\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport {v4 as uuidv4} from 'uuid';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle Complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  // Add Todo\n  addTodo = title => {\n    axios\n      .post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      })\n      .then(res => {\n        res.data.id = uuidv4();\n        this.setState({ todos: [...this.state.todos, res.data] });\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}